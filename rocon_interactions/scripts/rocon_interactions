#!/usr/bin/env python
#       
# License: BSD
#   https://raw.github.com/robotics-in-concert/rocon_concert/license/LICENSE
#
##############################################################################
# Imports
##############################################################################

import sys
import argparse
import rospy
import rocon_interactions
import rocon_console.console as console
import concert_msgs.msg as concert_msgs
import concert_msgs.srv as concert_srvs
import rocon_std_msgs.msg as rocon_std_msgs
import rocon_uri
import rocon_utilities
import rocon_python_comms

##############################################################################
# Functions
##############################################################################
    
def parse_arguments():
    parser = argparse.ArgumentParser(description='Prettifies rocon interactions information.')
    args = parser.parse_args()
    return args

##############################################################################
# Main
##############################################################################

if __name__ == '__main__':
    rospy.init_node('rocon_interactions')
    args = parse_arguments()
    try:
        service_name = rocon_python_comms.find_service('concert_msgs/GetInteractions', timeout=rospy.rostime.Duration(5.0), unique=True)
    except rocon_python_comms.NotFoundException:
        print(console.red + "failed to find unique service of type 'concert_msgs/GetInteractions' [%s]" % str(e))
        sys.exit(1)
    get_interactions = rospy.ServiceProxy(service_name, concert_srvs.GetInteractions)
    request = concert_srvs.GetInteractionsRequest(roles=[], uri=rocon_uri.default_uri_string)
    response = get_interactions(request)
    interactions_table = rocon_interactions.InteractionsTable()
    interactions_table.load(response.interactions)
    print("%s" % interactions_table)
